"""add_cart_and_orders

Revision ID: 43072af344c0
Revises: 36db84fced6b
Create Date: 2025-02-12 10:27:42.216692

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '43072af344c0'
down_revision: Union[str, None] = '36db84fced6b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('carts',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=True),
                    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                              nullable=False),
                    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('orders',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=True),
                    sa.Column('status', sa.String(length=20), nullable=False),
                    sa.Column('delivery_address', sa.Text(), nullable=False),
                    sa.Column('delivery_method', sa.String(length=50), nullable=False),
                    sa.Column('delivery_cost', sa.Numeric(precision=10, scale=2), nullable=False),
                    sa.Column('delivery_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
                    sa.Column('payment_method', sa.String(length=50), nullable=True),
                    sa.Column('payment_status', sa.String(length=20), nullable=True),
                    sa.Column('payment_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
                    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=False),
                    sa.Column('total', sa.Numeric(precision=10, scale=2), nullable=False),
                    sa.Column('planned_shipping_date', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                              nullable=False),
                    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('cart_items',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('cart_id', sa.UUID(), nullable=True),
                    sa.Column('product_id', sa.UUID(), nullable=True),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                              nullable=False),
                    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('order_items',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('order_id', sa.UUID(), nullable=True),
                    sa.Column('product_id', sa.UUID(), nullable=True),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                              nullable=False),
                    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_items')
    op.drop_table('cart_items')
    op.drop_table('orders')
    op.drop_table('carts')
    # ### end Alembic commands ###
