import json
from urllib.parse import urlencode

from aiogram import Router, types
from aiogram.filters import Command, CommandObject, CommandStart
from aiogram.utils.payload import decode_payload

from app.core.logger import logger
from app.core.settings import settings

router = Router()


@router.message(CommandStart())
async def cmd_start(message: types.Message, command: CommandObject):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –†–∞–±–æ—Ç–∞–µ—Ç –∏ —Å deeplink (—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π), –∏ –±–µ–∑ –Ω–µ–µ.
    """
    web_app_url = settings.FRONTEND_URL

    if command.args:
        try:
            payload = json.loads(decode_payload(command.args))
            query = urlencode(payload)
            web_app_url = f"{settings.FRONTEND_URL}?{query}"
            logger.info("User started bot with deeplink", extra={"payload": payload})
        except Exception as e:
            logger.error(
                "Failed to decode deeplink payload",
                extra={"args": command.args, "error": str(e)},
            )

    keyboard = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                types.InlineKeyboardButton(
                    text="üè™ –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω", web_app=types.WebAppInfo(url=web_app_url)
                )
            ]
        ]
    )

    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –ë–ê–î–æ–≤!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤.",
        reply_markup=keyboard,
    )

    logger.info(
        "User started the bot",
        extra={"user_id": message.from_user.id, "username": message.from_user.username},
    )


@router.message(Command("shop"))
async def cmd_shop(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /shop
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç inline –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è WebApp
    """
    keyboard = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                types.InlineKeyboardButton(
                    text="üè™ –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω",
                    web_app=types.WebAppInfo(url=settings.FRONTEND_URL),
                )
            ]
        ]
    )

    await message.answer(
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥:", reply_markup=keyboard
    )
