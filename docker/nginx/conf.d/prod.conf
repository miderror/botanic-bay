upstream backend {
    server backend:8000;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    server_name botanic.amgold.ru;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name botanic.amgold.ru;

    # Базовые настройки
    client_max_body_size 10M;
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # SSL сертификаты
    ssl_certificate /etc/letsencrypt/live/botanic.amgold.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/botanic.amgold.ru/privkey.pem;

    # SSL настройки безопасности
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;


    # Заголовки безопасности
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors https://web.telegram.org;" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # API endpoints
    location /api/ {
        client_max_body_size 10M;
        proxy_pass http://backend;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;

        # CORS заголовки
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Обработка preflight запросов
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    location /admin/statics/ {
        alias /usr/share/nginx/html/admin/statics/;
        expires 1d;
        access_log off;
    }

    location /admin {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Статические ассеты Vite
    location /assets/ {
        root /usr/share/nginx/html;  # Путь к собранным файлам
        expires 1h;
        add_header Cache-Control "public, no-transform";
    }

    # Images
    location /images/ {
        root /usr/share/nginx/html;
        expires 1h;
        add_header Cache-Control "public, no-transform";
    }

    # Favicon и статические файлы в корне
    location = /favicon.ico { 
        root /usr/share/nginx/html;
        expires 1y;
    }

    location = /robots.txt { 
        root /usr/share/nginx/html;
        expires 1y;
    }

    # Media files
    location /media/ {
        alias /backend/media/;
        expires 1h;
        add_header Cache-Control "public, no-transform";
        
        access_log /var/log/nginx/media-access.log combined buffer=32k flush=5s;
        error_log /var/log/nginx/media-error.log debug;
        
        try_files $uri $uri/ =404;
        
        add_header X-Debug-Path $request_filename;
        add_header X-Debug-Uri $uri;
    }

        # Основной location для всех остальных запросов
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    # Блокировка доступа к PHP файлам
    location ~ \.php$ {
        deny all;
        return 404;
    }

    # Блокировка доступа к .git и другим служебным директориям
    location ~ /\. {
        deny all;
        return 404;
    }

    # Блокировка доступа к vendor директории
    location ^~ /vendor/ {
        deny all;
        return 404;
    }

    # Общие настройки прокси
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    # Таймауты
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
}
